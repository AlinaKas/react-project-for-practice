{"version":3,"sources":["components/Modal/Modal.js","components/Tabs/Tabs.js","App.js","index.js","components/Modal/Modal.module.css"],"names":["modalRoot","document","querySelector","Tabs","Component","state","activeTabIdx","setActiveTabIdx","idx","setState","console","log","Date","now","this","items","props","activeTab","map","item","type","onClick","label","content","PureComponent","App","showModal","toggleModal","tabs","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"8vCAIMA,EAAYC,SAASC,cAAc,eCFpBC,GDIcC,Y,4MCHjCC,MAAQ,CACNC,aAAc,G,EAShBC,gBAAkB,SAAAC,GAChB,EAAKC,SAAS,CAAEH,aAAcE,K,4CAGhC,WAAU,IAAD,OACPE,QAAQC,IAAR,sBAA2BC,KAAKC,QAEhC,IAAQP,EAAiBQ,KAAKT,MAAtBC,aACAS,EAAUD,KAAKE,MAAfD,MACFE,EAAYF,EAAMT,GAExB,OACE,qCACE,8BACGS,EAAMG,KAAI,SAACC,EAAMX,GAAP,OACT,wBACEY,KAAK,SAELC,QAAS,kBAAM,EAAKd,gBAAgBC,IAHtC,SAKGW,EAAKG,OAHDH,EAAKG,YAQhB,gCACE,6BAAKL,EAAUK,QACf,4BAAIL,EAAUM,oB,GAtCUC,kB,QCM5BC,E,4MACJpB,MAAQ,CACNqB,WAAW,G,EAGbC,YAAc,WACZ,EAAKlB,UAAS,kBAAoB,CAAEiB,WAAtB,EAAGA,e,4CAGnB,WACwBZ,KAAKT,MAAnBqB,UACR,OACE,mCACE,cAAC,EAAD,CAAMX,MAAOa,U,GAbHxB,aAqCHqB,ICvCfI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,SAAW,wBAAwB,QAAU,0B","file":"static/js/main.8ff3053f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    // console.log('Modal componentDidMount');\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    // console.log('Modal componentWillUnmount');\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      //   console.log('Нажали ESC, нужно закрыть модалку');\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    // console.log('Кликнули в бекдроп');\n    // console.log('currentTarget: ', event.currentTarget);\n    // console.log('target: ', event.target);\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.backdrop} onClick={this.handleBackdropClick}>\n        <div className={s.content}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nexport default class Tabs extends PureComponent {\n  state = {\n    activeTabIdx: 0,\n  };\n\n  // Если элемент не обновился, он не будет перерендериваться или использовать PureComponent (идет поверхностное сравнение всех пропсов)\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   return nextState.activeTabIdx !== this.state.activeTabIdx;\n  // }\n\n  setActiveTabIdx = idx => {\n    this.setState({ activeTabIdx: idx });\n  };\n\n  render() {\n    console.log(`Re-render @ ${Date.now()}`);\n\n    const { activeTabIdx } = this.state;\n    const { items } = this.props;\n    const activeTab = items[activeTabIdx];\n\n    return (\n      <>\n        <div>\n          {items.map((item, idx) => (\n            <button\n              type=\"button\"\n              key={item.label}\n              onClick={() => this.setActiveTabIdx(idx)}\n            >\n              {item.label}\n            </button>\n          ))}\n        </div>\n\n        <div>\n          <h2>{activeTab.label}</h2>\n          <p>{activeTab.content}</p>\n        </div>\n      </>\n    );\n  }\n}\n","import './App.css';\nimport { LoremIpsum } from 'react-lorem-ipsum';\nimport React, { Component } from 'react';\nimport Modal from './components/Modal';\n// import Clock from './components/Clock';\nimport Tabs from './components/Tabs/Tabs';\nimport tabs from './components/Tabs/tabs.json';\n\nclass App extends Component {\n  state = {\n    showModal: false,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { showModal } = this.state;\n    return (\n      <>\n        <Tabs items={tabs} />\n\n        {/* <button type=\"button\" onClick={this.toggleModal}>\n          Modal open\n        </button>\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <h2>This is modal's content as CHILDREN</h2>\n            <LoremIpsum p={1} />\n            <button type=\"button\" onClick={this.toggleModal}>\n              Close\n            </button>\n          </Modal>\n        )} */}\n\n        {/* {showModal && <Clock />}\n        <button type=\"button\" onClick={this.toggleModal}>\n          Таймер\n        </button> */}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3FAPo\",\"content\":\"Modal_content__1VIbZ\"};"],"sourceRoot":""}